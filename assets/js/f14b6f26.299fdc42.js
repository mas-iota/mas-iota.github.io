"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1071],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var r=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=r.createContext({}),p=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(a),f=i,c=m["".concat(d,".").concat(f)]||m[f]||u[f]||n;return a?r.createElement(c,o(o({ref:t},s),{},{components:a})):r.createElement(c,o({ref:t},s))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<n;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6140:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var r=a(7462),i=(a(7294),a(3905));const n={id:"data-modifying-operators",title:"Data Modifying Operators",sidebar_label:"Data Modifying Operators",keywords:["buildfire","database","data","update","modify","operators","queries"],slug:"/data-modifying-operators"},o=void 0,l={unversionedId:"data-modifying-operators",id:"data-modifying-operators",title:"Data Modifying Operators",description:"The following modifiers are available for use in update operations; e.g. in buildfire.datastore.update() and buildfire.datastore.save()",source:"@site/docs/Data-Modifying-Operators.md",sourceDirName:".",slug:"/data-modifying-operators",permalink:"/docs/data-modifying-operators",draft:!1,tags:[],version:"current",frontMatter:{id:"data-modifying-operators",title:"Data Modifying Operators",sidebar_label:"Data Modifying Operators",keywords:["buildfire","database","data","update","modify","operators","queries"],slug:"/data-modifying-operators"},sidebar:"api",previous:{title:"GeoData",permalink:"/docs/geodata"},next:{title:"Search Operators",permalink:"/docs/search-operators"}},d={},p=[{value:"Update Operators",id:"update-operators",level:2},{value:"Operators",id:"operators",level:2},{value:"Modifiers",id:"modifiers",level:2}],s={toc:p};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The following modifiers are available for use in update operations; e.g. in ",(0,i.kt)("inlineCode",{parentName:"p"},"buildfire.datastore.update()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"buildfire.datastore.save()")),(0,i.kt)("h2",{id:"update-operators"},"Update Operators"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$inc"),"\tIncrements the value of the field by the specified amount."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$mul"),"\tMultiplies the value of the field by the specified amount."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$rename"),"\tRenames a field."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$setOnInsert"),"\tSets the value of a field if an update results in an insert of a document. Has no effect on update operations that modify existing documents."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$set"),"\tSets the value of a field in a document."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$unset"),"\tRemoves the specified field from a document."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$min"),"\tOnly updates the field if the specified value is less than the existing field value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$max"),"\tOnly updates the field if the specified value is greater than the existing field value.")),(0,i.kt)("h2",{id:"operators"},"Operators"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$addToSet"),"\tAdds elements to an array only if they do not already exist in the set."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$pop"),"\tRemoves the first or last item of an array."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$pullAll"),"\tRemoves all matching values from an array."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$pull"),"\tRemoves all array elements that match a specified query."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$pushAll"),"\tDeprecated. Adds several items to an array."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$push"),"\tAdds an item to an array.")),(0,i.kt)("h2",{id:"modifiers"},"Modifiers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$each"),"\tModifies the ",(0,i.kt)("inlineCode",{parentName:"li"},"$push")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"$addToSet")," operators to append multiple items for array updates."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$slice"),"\tModifies the ",(0,i.kt)("inlineCode",{parentName:"li"},"$push")," operator to limit the size of updated arrays."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$sort"),"\tModifies the ",(0,i.kt)("inlineCode",{parentName:"li"},"$push")," operator to reorder documents stored in an array."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"$position"),"\tModifies the ",(0,i.kt)("inlineCode",{parentName:"li"},"$push")," operator to specify the position in the array to add elements.")))}u.isMDXComponent=!0}}]);