"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8811],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||a;return n?i.createElement(g,o(o({ref:t},p),{},{components:n})):i.createElement(g,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8400:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={id:"rating-system",title:"Rating System",sidebar_label:"Rating System",description:"BuildFire Five Star Rating Component",keywords:["buildfire","rating","system","component","fivestar","five","star"],slug:"/rating-system"},o="buildfire.components.ratingSystem",s={unversionedId:"rating-system",id:"rating-system",title:"Rating System",description:"BuildFire Five Star Rating Component",source:"@site/docs/Rating-System.md",sourceDirName:".",slug:"/rating-system",permalink:"/docs/rating-system",draft:!1,tags:[],version:"current",frontMatter:{id:"rating-system",title:"Rating System",sidebar_label:"Rating System",description:"BuildFire Five Star Rating Component",keywords:["buildfire","rating","system","component","fivestar","five","star"],slug:"/rating-system"},sidebar:"components",previous:{title:"ListView",permalink:"/docs/listview"},next:{title:"Thumbnail",permalink:"/docs/thumbnail"}},l={},c=[{value:"Requirements",id:"requirements",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"<code>injectRatings(options)</code>",id:"injectratingsoptions",level:3},{value:"Example",id:"example",level:3},{value:"widget/index.html",id:"widgetindexhtml",level:4},{value:"<code>onRating - event</code>",id:"onrating---event",level:3}],p={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"buildfirecomponentsratingsystem"},(0,r.kt)("inlineCode",{parentName:"h1"},"buildfire.components.ratingSystem")),(0,r.kt)("p",null,"The rating system component provides easy way to integrate 5 star rating system into any plugin. It includes complete UI for adding ratings & reviews, displaying average ratings and moderating / reviewing ratings."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"Widget"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    \x3c!-- Load css --\x3e\n    <link  rel="stylesheet"  href="../../../scripts/buildfire/components/ratingSystem/index.min.css">\n\n    \x3c!-- Load JS --\x3e\n    <script  src="../../../scripts/buildfire/components/ratingSystem/index.min.js"><\/script>\n')),(0,r.kt)("p",null,"Control"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    \x3c!-- Load css --\x3e\n    <link  rel="stylesheet"  href="../../../../scripts/buildfire/components/ratingSystem/index.min.css">\n\n    \x3c!-- Load JS --\x3e\n    <script  src="../../../../scripts/buildfire/components/ratingSystem/index.min.js"><\/script>\n')),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"injectratingsoptions"},(0,r.kt)("inlineCode",{parentName:"h3"},"injectRatings(options)")),(0,r.kt)("p",null,"This method will find all html elements with attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"data-rating-id")," and inject rating component with that rating id inside of them. Container can be styled in any way that suites the use case."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," - object, optional",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hideAverage")," - Show / hide numerical part of average rating. (boolean, optional, defaults to true)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pluginLevel")," - Keep ratings bound to current plugin. If nothing is provided, ratings will be saved on app level (boolean, optional, defaults to false)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"showRatingsOnClick")," - Will show ratings screen with users ratings and average score. (boolean, optional, defaults to true)")))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s3-us-west-2.amazonaws.com/imageserver.prod/1601891872410-007819754252557476/adb52420-0c87-11eb-8997-3b3cc1331f52.png",alt:"Average rating"})),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("h4",{id:"widgetindexhtml"},"widget/index.html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'<!DOCTYPE  html>\n<html>\n    <head>\n        <meta  name="viewport"  content="width=device-width, initial-scale=1.0">\n        \x3c!-- Make sure to include buildfire first --\x3e\n        <script  src="../../../scripts/buildfire.min.js"><\/script>\n        <script  src="../../../scripts/buildfire/components/ratingSystem/index.min.js"><\/script>\n        <link  rel="stylesheet"  href="../../../scripts/buildfire/components/ratingSystem/index.min.css">\n    </head>\n    <body>\n        <div  data-rating-id="ratingComponentTest"></div>\n        <script>\n            buildfire.components.ratingSystem.injectRatings();\n        <\/script>\n    </body>\n</html>\n')),(0,r.kt)("h3",{id:"onrating---event"},(0,r.kt)("inlineCode",{parentName:"h3"},"onRating - event")),(0,r.kt)("p",null,"You can use onRating event to capture whenever rating has been added or edited. Event object consists of rating that was added/edite and updated summary for that rating id."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'buildfire.components.ratingSystem.onRating = (e) => {\n    console.log("RATING", e.rating);\n    console.log("SUMMARY", e.summary)\n}\n')))}d.isMDXComponent=!0}}]);